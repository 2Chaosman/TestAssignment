"use strict";angular.module("testAssignment",[]).controller("testController",["$scope","$http",function(e,n){e.student={firstname:"",lastname:"",lesson:"",marksnumber:0,allLessons:0,missedminus:0},e.sendResults=function(){console.log(e.student),n({url:"res.php",method:"POST",data:e.student}).success(function(n,t,s,r){e.data=n,console.log(n)}).error(function(n,t,s,r){e.status=t})},e.addMarkFields=function(){var n=e.student.marksnumber,t=document.getElementById("addmarks");t.innerHTML="";for(var s=0;n>s;s++)t.insertAdjacentHTML("afterBegin","<input type='number' min='1' class='form-control' name='mark' required>")},e.averageMark=function(){for(var e=document.getElementById("addmarks"),n=e.getElementsByTagName("*"),t=0,s=0;s<n.length;s++)t+=Number(n[s].value);return Math.round(t/n.length)},e.missedLessons=function(){var n=e.student.allLessons,t=e.student.missedminus;return t/n*100},e.toGrade=function(){var n=e.missedLessons(),t=e.averageMark(),s=document.getElementById("result");s.innerHTML="",10>=n&&t>=4?s.insertAdjacentHTML("beforeEnd","<p style='color:green; font-weight:bold'>Результат: Зачтено</p>"):s.insertAdjacentHTML("beforeEnd","<p style='color:red; font-weight:bold'>Результат: Незачтено</p>")}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkaHR0cCIsInN0dWRlbnQiLCJmaXJzdG5hbWUiLCJsYXN0bmFtZSIsImxlc3NvbiIsIm1hcmtzbnVtYmVyIiwiYWxsTGVzc29ucyIsIm1pc3NlZG1pbnVzIiwic2VuZFJlc3VsdHMiLCJjb25zb2xlIiwibG9nIiwidXJsIiwibWV0aG9kIiwiZGF0YSIsInN1Y2Nlc3MiLCJzdGF0dXMiLCJoZWFkZXJzIiwiY29uZmlnIiwiZXJyb3IiLCJhZGRNYXJrRmllbGRzIiwibnVtYmVyT2ZNYXJrcyIsIm1hcmtCZWdpbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJpIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiYXZlcmFnZU1hcmsiLCJkaXYiLCJlbGVtcyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic3VtIiwibGVuZ3RoIiwiTnVtYmVyIiwidmFsdWUiLCJNYXRoIiwicm91bmQiLCJtaXNzZWRMZXNzb25zIiwiYWxsIiwibWlzc2VkIiwidG9HcmFkZSIsIm1pc3MiLCJhdmVyYWdlIiwicmVzdWx0RWxlbSJdLCJtYXBwaW5ncyI6IkFBQ0EsWUFFQUEsU0FBUUMsT0FBTyxxQkFFZEMsV0FBVyxrQkFBbUIsU0FBVSxRQUFTLFNBQVVDLEVBQVFDLEdBRWhFRCxFQUFPRSxTQUNIQyxVQUFXLEdBQ1hDLFNBQVUsR0FDVkMsT0FBUSxHQUNSQyxZQUFhLEVBQ2JDLFdBQVksRUFDWkMsWUFBYSxHQUlqQlIsRUFBT1MsWUFBYyxXQUVqQkMsUUFBUUMsSUFBSVgsRUFBT0UsU0FnQm5CRCxHQUNJVyxJQUFLLFVBQ0xDLE9BQVEsT0FDUkMsS0FBTWQsRUFBT0UsVUFDZGEsUUFBUSxTQUFVRCxFQUFNRSxFQUFRQyxFQUFTQyxHQUN4Q2xCLEVBQU9jLEtBQU9BLEVBQ2RKLFFBQVFDLElBQUlHLEtBQ2JLLE1BQU0sU0FBVUwsRUFBTUUsRUFBUUMsRUFBU0MsR0FDdENsQixFQUFPZ0IsT0FBU0EsS0FPeEJoQixFQUFPb0IsY0FBZ0IsV0FHbkIsR0FBSUMsR0FBZ0JyQixFQUFPRSxRQUFRSSxZQUMvQmdCLEVBQVlDLFNBQVNDLGVBQWUsV0FDeENGLEdBQVVHLFVBQVksRUFFdEIsS0FBSyxHQUFJQyxHQUFJLEVBQU9MLEVBQUpLLEVBQW1CQSxJQUMvQkosRUFBVUssbUJBQW1CLGFBQWMsNEVBSW5EM0IsRUFBTzRCLFlBQWMsV0FPakIsSUFBSyxHQUpEQyxHQUFNTixTQUFTQyxlQUFlLFlBQzlCTSxFQUFRRCxFQUFJRSxxQkFBcUIsS0FDakNDLEVBQU0sRUFFRE4sRUFBSSxFQUFHQSxFQUFJSSxFQUFNRyxPQUFRUCxJQUM5Qk0sR0FBT0UsT0FBT0osRUFBTUosR0FBR1MsTUFHM0IsT0FBT0MsTUFBS0MsTUFBTUwsRUFBTUYsRUFBTUcsU0FHbENqQyxFQUFPc0MsY0FBZ0IsV0FHbkIsR0FBSUMsR0FBTXZDLEVBQU9FLFFBQVFLLFdBQ3JCaUMsRUFBU3hDLEVBQU9FLFFBQVFNLFdBRTVCLE9BQU9nQyxHQUFTRCxFQUFNLEtBSTFCdkMsRUFBT3lDLFFBQVUsV0FHYixHQUFJQyxHQUFPMUMsRUFBT3NDLGdCQUNkSyxFQUFVM0MsRUFBTzRCLGNBRWpCZ0IsRUFBYXJCLFNBQVNDLGVBQWUsU0FDekNvQixHQUFXbkIsVUFBWSxHQUVYLElBQVJpQixHQUFjQyxHQUFXLEVBQ3pCQyxFQUFXakIsbUJBQW1CLFlBQWEsbUVBRTNDaUIsRUFBV2pCLG1CQUFtQixZQUFhIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuYW5ndWxhci5tb2R1bGUoJ3Rlc3RBc3NpZ25tZW50JywgW10pXHJcblxyXG4uY29udHJvbGxlcigndGVzdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckaHR0cCcsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwKSB7XHJcblxyXG4gICAgJHNjb3BlLnN0dWRlbnQgPSB7XHJcbiAgICAgICAgZmlyc3RuYW1lOiBcIlwiLFxyXG4gICAgICAgIGxhc3RuYW1lOiBcIlwiLFxyXG4gICAgICAgIGxlc3NvbjogXCJcIixcclxuICAgICAgICBtYXJrc251bWJlcjogMCxcclxuICAgICAgICBhbGxMZXNzb25zOiAwLFxyXG4gICAgICAgIG1pc3NlZG1pbnVzOiAwLFxyXG5cclxuICAgIH07XHJcblxyXG4gICAgJHNjb3BlLnNlbmRSZXN1bHRzID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuc3R1ZGVudCk7XHJcblxyXG4gICAgICAgIC8qdmFyIG1zZyA9ICQoJyNSZXN1bHRzRm9ybScpLnNlcmlhbGl6ZSgpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDo5MDAwL3Jlcy5waHAnLFxyXG4gICAgICAgICAgICBkYXRhOiBtc2csXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2VydmVyUmVzdWx0JykuaHRtbChkYXRhKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICh4aHIsIHN0cikge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ9CS0L7Qt9C90LjQutC70LAg0L7RiNC40LHQutCwOiAnICsgeGhyLnJlc3BvbnNlQ29kZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTsqL1xyXG5cclxuXHJcbiAgICAgICAgJGh0dHAoe1xyXG4gICAgICAgICAgICB1cmw6ICdyZXMucGhwJyxcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgZGF0YTogJHNjb3BlLnN0dWRlbnRcclxuICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xyXG4gICAgICAgICAgICAkc2NvcGUuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xyXG4gICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcblxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgJHNjb3BlLmFkZE1hcmtGaWVsZHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLyog0JTQvtCx0LDQstC70LXQvdC40LUg0L/QvtC70LXQuSDQtNC70Y8g0LLRi9GB0YLQsNCy0LvQtdC90LjQtSDQvtGG0LXQvdC+0LogKi9cclxuXHJcbiAgICAgICAgdmFyIG51bWJlck9mTWFya3MgPSAkc2NvcGUuc3R1ZGVudC5tYXJrc251bWJlciAvKmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFya3NudW1iZXJcIikudmFsdWUqLyA7XHJcbiAgICAgICAgdmFyIG1hcmtCZWdpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRkbWFya3NcIilcclxuICAgICAgICBtYXJrQmVnaW4uaW5uZXJIVE1MID0gJyc7XHJcblxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyT2ZNYXJrczsgaSsrKSB7XHJcbiAgICAgICAgICAgIG1hcmtCZWdpbi5pbnNlcnRBZGphY2VudEhUTUwoXCJhZnRlckJlZ2luXCIsIFwiPGlucHV0IHR5cGU9J251bWJlcicgbWluPScxJyBjbGFzcz0nZm9ybS1jb250cm9sJyBuYW1lPSdtYXJrJyByZXF1aXJlZD5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICRzY29wZS5hdmVyYWdlTWFyayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIC8qINCf0L7QtNGB0YfQtdGCINGB0YDQtdC00L3QtdC5INC+0YbQtdC90LrQuCAqL1xyXG5cclxuICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRtYXJrc1wiKTtcclxuICAgICAgICB2YXIgZWxlbXMgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpO1xyXG4gICAgICAgIHZhciBzdW0gPSAwO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHN1bSArPSBOdW1iZXIoZWxlbXNbaV0udmFsdWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoc3VtIC8gZWxlbXMubGVuZ3RoKTtcclxuICAgIH07XHJcblxyXG4gICAgJHNjb3BlLm1pc3NlZExlc3NvbnMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAvKiDQv9C+0LvRg9GH0LXQvdC40LUg0L/RgNC+0YbQtdC90YLQsCDQv9GA0L7Qv9GD0YnQtdC90L3Ri9GFINC30LDQvdGP0YLQuNC5ICovXHJcblxyXG4gICAgICAgIHZhciBhbGwgPSAkc2NvcGUuc3R1ZGVudC5hbGxMZXNzb25zO1xyXG4gICAgICAgIHZhciBtaXNzZWQgPSAkc2NvcGUuc3R1ZGVudC5taXNzZWRtaW51cztcclxuXHJcbiAgICAgICAgcmV0dXJuIG1pc3NlZCAvIGFsbCAqIDEwMDtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgICRzY29wZS50b0dyYWRlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLyog0JLRi9GB0YLQsNCy0LvQtdC90LjQtSDQvtGG0LXQvdC60LggKi9cclxuXHJcbiAgICAgICAgdmFyIG1pc3MgPSAkc2NvcGUubWlzc2VkTGVzc29ucygpO1xyXG4gICAgICAgIHZhciBhdmVyYWdlID0gJHNjb3BlLmF2ZXJhZ2VNYXJrKCk7XHJcblxyXG4gICAgICAgIHZhciByZXN1bHRFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN1bHRcIilcclxuICAgICAgICByZXN1bHRFbGVtLmlubmVySFRNTCA9ICcnO1xyXG5cclxuICAgICAgICBpZiAobWlzcyA8PSAxMCAmJiBhdmVyYWdlID49IDQpIHtcclxuICAgICAgICAgICAgcmVzdWx0RWxlbS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVFbmRcIiwgXCI8cCBzdHlsZT0nY29sb3I6Z3JlZW47IGZvbnQtd2VpZ2h0OmJvbGQnPtCg0LXQt9GD0LvRjNGC0LDRgjog0JfQsNGH0YLQtdC90L48L3A+XCIpO1xyXG4gICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICByZXN1bHRFbGVtLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZUVuZFwiLCBcIjxwIHN0eWxlPSdjb2xvcjpyZWQ7IGZvbnQtd2VpZ2h0OmJvbGQnPtCg0LXQt9GD0LvRjNGC0LDRgjog0J3QtdC30LDRh9GC0LXQvdC+PC9wPlwiKTtcclxuICAgIH07XHJcblxyXG5cclxufV0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
